table Eras
	lineageTag: b28d9a9f-2d72-4d17-9248-872147810176

	column StartYear
		dataType: string
		lineageTag: e7fdb87b-8f6c-44dc-a0a6-b7c08677de51
		summarizeBy: none
		sourceColumn: StartYear

		annotation SummarizationSetBy = Automatic

	column EndYear
		dataType: string
		lineageTag: 3f10860a-0ee4-4b4f-aa92-2631706408e6
		summarizeBy: none
		sourceColumn: EndYear

		annotation SummarizationSetBy = Automatic

	column Label
		dataType: string
		lineageTag: 54bd13f5-ffd4-4835-af60-82f8e7695d78
		summarizeBy: none
		sourceColumn: Label

		annotation SummarizationSetBy = Automatic

	column EraKey
		dataType: int64
		formatString: 0
		lineageTag: e759dc9e-1482-41a1-a830-bd8446397763
		summarizeBy: none
		sourceColumn: EraKey

		annotation SummarizationSetBy = Automatic

	column Era
		dataType: string
		lineageTag: 8203b5e8-d6a4-4672-9d19-37d9d5205e68
		summarizeBy: none
		sourceColumn: Era
		sortByColumn: EraKey

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	partition Eras = m
		mode: import
		source =
				let
				    YearLabel = (y as number) as text =>
				        if y < 0 then Number.ToText(Number.Abs(y)) & " BCE"
				        else Number.ToText(y) & " CE",
				
				    EraMeta2000 = {
				        [ EraKey = -10000, StartYear = YearLabel(-10000), EndYear = YearLabel(-8000), Label = "Pre-Agricultural Era" ],
				        [ EraKey = -8000,  StartYear = YearLabel(-8000),  EndYear = YearLabel(-6000), Label = "Agricultural Revolution" ],
				        [ EraKey = -6000,  StartYear = YearLabel(-6000),  EndYear = YearLabel(-4000), Label = "Neolithic to Chalcolithic" ],
				        [ EraKey = -4000,  StartYear = YearLabel(-4000),  EndYear = YearLabel(-2000), Label = "Bronze Age" ],
				        [ EraKey = -2000,  StartYear = YearLabel(-2000),  EndYear = YearLabel(0),     Label = "Iron Age and Antiquity" ],
				        [ EraKey = 0,      StartYear = YearLabel(0),      EndYear = YearLabel(2000),  Label = "Common Era" ]
				    },
				
				    EraTable2000 = Table.FromRecords(EraMeta2000),
				    #"Added Custom" = Table.AddColumn(EraTable2000, "Era", each [StartYear]&"-"&[EndYear]),
				    #"Changed Type" = Table.TransformColumnTypes(#"Added Custom",{{"EraKey", Int64.Type}})
				in
				    #"Changed Type"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

